
######################################################################
#       ubuntu 20.04.3
######################################################################

#  SPDX-License-Identifier: LGPL-2.1+
#
#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.

[Unit]
Description=Getty on %I
Documentation=man:agetty(8) man:systemd-getty-generator(8)
Documentation=http://0pointer.de/blog/projects/serial-console.html
After=systemd-user-sessions.service plymouth-quit-wait.service getty-pre.target
After=rc-local.service

# If additional gettys are spawned during boot then we should make
# sure that this is synchronized before getty.target, even though
# getty.target didn't actually pull it in.
Before=getty.target
IgnoreOnIsolate=yes

# IgnoreOnIsolate causes issues with sulogin, if someone isolates
# rescue.target or starts rescue.service from multi-user.target or
# graphical.target.
Conflicts=rescue.service
Before=rescue.service

# On systems without virtual consoles, don't start any getty. Note
# that serial gettys are covered by serial-getty@.service, not this
# unit.
ConditionPathExists=/dev/tty0


# tty (终端设备的统称)
# pty（虚拟终端)
# pts/ptmx (pts/ptmx 结合使用，进而实现 pty)
# 串行端口终端 (/dev/ttySn), /dev/ttyS0 对应于 DOS系统下的 COM1 等
# 伪终端 (/dev/pty/) 是成对的逻辑终端设备(即master和slave设备, 对master的操作会反映到slave上)

# 控制终端 (/dev/tty)
# 命令”ps –ax”来查看进程与哪个控制终端相连。
#对于你登录的 shell，/dev/tty 就是你使用的终端，设备号是(5,0)。
# 使用 tty 命令可以确定当前的终端或者控制台

# 虚拟终端(/dev/pts/n) 在 Xwindows 模式下的伪终端

# /dev/console 即控制台，是与操作系统交互的设备，系统将一些信息直接输出到控制台上

#Q:/dev/tty是什么？
#A：tty设备包括虚拟控制台，串口以及伪终端设备。
#/dev/tty代表当前tty设备，在当前的终端中输入 echo “hello” > /dev/tty ，都会直接显示在当前的终端中。

# /dev/tty0 与 /dev/fb* 有什么区别？
# 在 Framebuffer 设备没有启用的系统中，可以使用 /dev/tty0 访问显卡

# 只有 2410 的 2.6 才叫 ttySAC0，9200等 的还是叫 ttyS0

# Alt + Ctrl + F3 / Alt + F3 -->> /dev/tty3

# sudo apt-get install -y zhcon -f # 解决 控制终端 (/dev/tty) 中文乱码
#execute_sudo zhcon --utf8 --drv=vga # 启动 zhcon，中文乱码。
#execute_sudo zhcon --utf8 --drv=fb # 启动 zhcon，中文显示正常。
#execute_sudo zhcon --utf8 --drv=auto # 启动 zhcon，中文显示正常。

# fbterm--支持中文显示的控制台
# fbterm 提供了一个快速的终端仿真器，它直接运行在你的系统中的帧缓冲 (framebuffer) 之上。
# 使用帧缓冲可以在终端渲染 UTF-8 文本时可以提高性能。
# fbterm 旨在提供国际化和现代字体支持时至少与 Linux 内核终端一样快，
# 它允许你在同一个帧缓冲上创建多达 10 个不同的终端窗口，每个窗口都有它的回滚历史。
# 要运行 fbterm，首先检查当前用户是否在 video 组，如不在，则加入。
# 当运行 fbterm 后，会在用户主目录下生成 .fbtermrc 配置文件，
# 其中可以更换字体样式及大小、默认前/背景色。
# 若你不能看到中文，按 Ctrl+Alt+E 退出后，再运行下面的命令： LANG=zh_CN.utf-8 fbterm
# sudo apt-get install -y fbterm -f # 解决 控制终端 (/dev/tty) 中文乱码
# sudo fbterm # 运行 fbterm
# 在控制台中 按 Ctrl+Alt+E 退出 fbterm
# fbterm 功能是很强大的，支持字体样式、大小、样色设置等，修改配置文件 .fbtermrc 即可，
# 在控制台输入以下命令： sudo gedit ~/.fbtermrc

[Service]
# the VT is cleared by TTYVTDisallocate
# The '-o' option value tells agetty to replace 'login' arguments with an
# option to preserve environment (-p), followed by '--' for safety, and then
# the entered username.


ExecStart=-/sbin/agetty -o '-p -- \\u' --noclear %I $TERM
#ExecStart=-/sbin/agetty --noclear %I $TERM
#ExecStart=-/sbin/agetty -8 -L %I 115200 $TERM –autologin root


Type=idle
Restart=always
RestartSec=0
UtmpIdentifier=%I
TTYPath=/dev/%I
TTYReset=yes
TTYVHangup=yes
TTYVTDisallocate=yes
KillMode=process
IgnoreSIGPIPE=no
SendSIGHUP=yes

# Unset locale for the console getty since the console has problems
# displaying some internationalized messages.
UnsetEnvironment=LANG LANGUAGE LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION

[Install]
WantedBy=getty.target
DefaultInstance=tty1
